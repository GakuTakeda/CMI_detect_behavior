data:
  name: cmi
  raw_dir: ../data
  train_csv: train.csv
  test_csv: test.csv
  export_dir: output
  pad_percentile: 95
  val_ratio: 0.2
  random_seed : 42
  n_splits: 5

train:
  batch_size: 128
  batch_size_val: 256
  epochs: 100
  lr_init: 1e-3
  weight_decay: 1e-4
  mixup_alpha: 0.2
  patience: 30
  t0_factor: 5            # CosineAnnealingWarmRestarts の T_0 係数
  device: cuda
  dense_drop: 0.2
  conv_drop: 0.2
  noise_std: 0.09
  mode: 18_class

  # Early stopping & 出力
  metric_name: val_loss

model:
  model:
    name: lstmgru
    num_classes: null
    num_channels: null         # (= imu_dim + tof_dim に一致していると安全)

  modalities:
    imu_dim: null              
    tof_dim: null           # ★ 追加：ToF/THMの特徴数

  meta:
    proj_dim: 32
    dropout: 0.20

  cnn:
    multiscale:
      out_per_kernel: 12
      kernel_sizes: [3, 5, 7]   # （今回は使わず、二分岐のカーネルで管理。将来拡張用に残してOK）
    se:
      out_channels: 48
      drop: 0.30
    pool_sizes: [2, 2]          # ★ ブロック数と同数 or 省略時は末尾を繰り返し

  # 二分岐ごとのブロック構成（Keras相当をYAML化）
  branches:
    imu:
      filters:   [64, 128]
      kernels:   [3,   5]       # Residual+SEの各ブロックのカーネル
      dropouts:  [0.10, 0.10]
    tof:
      filters:   [64, 128]
      kernels:   [3,   3]       # 軽量Convブロック
      dropouts:  [0.20, 0.20]

  rnn:
    hidden_size: 128
    num_layers: 2
    dropout: 0.20
    bidirectional: true

  noise:
    std: 0.09

  head:
    hidden: 512                 # 単一の全結合層
    dropout: 0.50


aug:
  no_aug: false
  p_time_shift: 0.5
  max_shift_ratio: 0.2
  p_time_warp: 0.0
  warp_min: 0.9
  warp_max: 1.1
  p_block_dropout: 0.0
  n_blocks:
  - 1
  - 2
  block_len:
  - 2
  - 5
  p_imu_jitter: 0.0
  imu_sigma: 0.0
  p_imu_scale: 0.0
  imu_scale_sigma: 0.0
  p_imu_drift: 0.0
  drift_std: 0.003
  drift_clip: 0.25
  p_imu_small_rot: 0.0
  rot_deg: 5.0
  pad_value: 0.0